version: '3.8'

services:
  public-api-gateway:
    image: nginx:latest
    container_name: public-api-gateway
    env_file:
      - .env
    depends_on:
      - auth-service
      - user-service
      - courses-service
      - lesson-service
      - comment-service
      - enrollment-service
    ports:
      - "3000:80"
    volumes:
      - ./services/public-api-gateway/nginx.conf:/etc/nginx/nginx.conf:ro
    networks:
      - backend
  user-service:
    build:
      context: .
      dockerfile: services/user-service/Dockerfile
    env_file:
      - .env
    ports:
      - "${PORT_USER}:${PORT_USER}"
    depends_on:
      - mongo
    networks:
      - backend
  auth-service:
    build:
      context: .
      dockerfile: services/auth-service/Dockerfile
    env_file:
      - .env
    ports:
      - "${PORT_AUTH}:${PORT_AUTH}"
    depends_on:
      - mongo
    networks:
      - backend
  courses-service:
    build:
      context: .
      dockerfile: services/courses-service/Dockerfile
    env_file:
      - .env
    volumes:
      - ./services/courses-service:/usr/src/app
    ports:
      - "${PORT_COURSES}:${PORT_COURSES}"
    depends_on:
      - mongo
    networks:
      - backend
  lesson-service:
    build:
      context: .
      dockerfile: services/lesson-service/Dockerfile
    env_file:
      - .env
    ports:
      - "${PORT_LESSON}:${PORT_LESSON}"
    depends_on:
      - mongo
    networks:
      - backend
  comment-service:
    build:
      context: .
      dockerfile: services/comment-service/Dockerfile
    env_file:
      - .env
    ports:
      - "${PORT_COMMENT}:${PORT_COMMENT}"
    depends_on:
      - mongo
    networks:
      - backend
  enrollment-service:
    build:
      context: .
      dockerfile: services/enrollment-service/Dockerfile
    env_file:
      - .env
    ports:
      - "${PORT_ENROLLMENT}:${PORT_ENROLLMENT}"
    depends_on:
      - mongo
    healthcheck:
      test: [ "CMD", "bash", "-c", "nc -z rabbitmq 5672" ]
      interval: 5s
      retries: 5
    networks:
      - backend
  mongo:
    image: mongo:5.0
    volumes:
      - mongo_userdata:/data/db
    ports:
      - "27018:27017"
    networks:
      - backend

  rabbitmq:
    image: rabbitmq:3-management
    healthcheck:
      test: [ "CMD", "rabbitmq-diagnostics", "ping" ]
      interval: 10s
      retries: 5
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - backend

networks:
  backend:

volumes:
  mongo_userdata:
